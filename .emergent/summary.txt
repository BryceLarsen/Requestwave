<analysis>
The previous AI engineer successfully expanded the RequestWave application from its MVP state, incorporating complex features and resolving critical bugs. Initial efforts focused on implementing a freemium model and extensive playlist management. Significant work was done on UI/UX, including a complete overhaul of On Stage mode, refined genre categorization, and general UI cleanups.

A recurring challenge involved environment-related bugs, particularly with QR code URLs and database inconsistencies after conversation forks. Key feature additions included a comprehensive 3-step audience request flow with integrated tipping, new musician control toggles for tips and live requests, and a robust login page enhancement with the user's personal story. The most recent work involved fixing various bugs, including an issue with Zelle field persistence, On Stage mode request update errors, and ensuring playlist visibility for the audience. The work paused while investigating a mobile dropdown visibility issue.
</analysis>

<product_requirements>
The RequestWave application aims to empower musicians in managing songs, requests, and tips, built upon a freemium model. Key requirements and implemented features include:

1.  **Freemium Model:** Implemented with a  feature flag, allowing full functionality in a free-ga state while scaffolding payment integration (Stripe) for future use.
2.  **On Stage Mode Enhancements:** Redesigned into Up Next, Active Requests, and Completed Requests sections. Requester names and dedications are now larger and bolder for improved visibility.
3.  **Music Management Refinement:** Curated list of 15 specific genres for song imports, with flexibility for custom additions. Genre and Mood editing for songs was upgraded to a multi-select dropdown with add new functionality.
4.  **Audience Request & Tipping Flow:** A 3-step modal flow for requests: request form, tip choice (, 0, 0, 0, 00, custom, PayPal, Venmo, Zelle, plus pop-up blocker fallback), and a social media follow modal. Suggest a Song is always visible.
5.  **Payment System Expansion:** Full Zelle integration (email, phone) alongside PayPal and Venmo.
6.  **UI/UX & Bug Fixes:** Removed legacy Venmo link, conditional display of social links, fixed tips not displaying on request cards, resolved QR code URL mismatches, and mobile layout issues. Playlist visibility in audience search filter was fixed.
7.  **Musician Control Features:** Implemented global Tip System Toggle and On Stage Request Toggle.
8.  **Login Page Enhancement:** A redesigned login page incorporating the founder's photo and story, subscription information, and a Support RequestWave section with donation options.
</product_requirements>

<key_technical_concepts>
-   **Full-stack Architecture**: React (frontend), FastAPI (backend), MongoDB.
-   **Authentication**: JWT token-based.
-   **API Integration**: Stripe (guarded for freemium), PayPal, Venmo, Zelle (for tips).
-   **Backend Routing**: FastAPI , Pydantic models.
-   **Frontend State Management**: React , .
-   **UI/UX**: Tailwind CSS, modals, conditional rendering, multi-select dropdowns.
-   **Feature Flags**: .
</key_technical_concepts>

<code_architecture>
The application follows a standard full-stack structure:



-   **/app/backend/server.py**: Core FastAPI backend.
    -   **Importance**: Centralizes API endpoints for authentication, song/playlist/request management, profile updates, and payment integrations, interacting with MongoDB. It is the heart of the application's business logic.
    -   **Changes Made**:
        -   **Freemium Model ()**: Implemented.
        -   **On Stage Mode**:  status added to  and  Pydantic models.
        -   **Genre Management**:  list updated.
        -   **Payment Integration (Tips)**: Removed . Added  and  to , , , . Updated endpoints.
        -   **Tip-Request Association**:  added to  and  models.
        -   **QR Code URL Fix**: Implemented a runtime hotfix to ensure  consistently matches , overriding deployment misconfigurations.
        -   **New Features (Toggles)**: Added  and  to , ,  models, and updated profile response endpoints.
        -   **Database Name**: Fixed  to use environment variable ().
        -   **CORS Configuration**: Made more flexible, ensuring  is allowed.
        -   **Genre/Mood Endpoints**: Added  and  endpoints to fetch all unique genres and moods.

-   **/app/frontend/src/App.js**: Main React component.
    -   **Importance**: Manages routing, global state, UI for musician/audience dashboards, and all frontend logic for backend interaction.
    -   **Changes Made**:
        -   **Freemium Model ()**: Reads flag, conditionally hides/stubs billing UI.
        -   **On Stage Mode**:  rewritten,  updated to display , requester names/dedications now larger/bolder.
        -   **Audience Request Flow**: 3-step modal flow implemented (, ),  modified.
        -   **Tipping UI**: /0/0/0/00 tip buttons, custom amount, PayPal, Venmo, Zelle, pop-up blocker fallback. Tip modal redesigned with smaller buttons, other amount input, No Tip button, and Skip button (redirects to social links).
        -   **UI Enhancements**: Suggest a Song always visible. Removed legacy Venmo Link. Social media links only display if non-blank.
        -   **QR Code URL Fix**:  helper function added.
        -   **Tip/Request Toggles**:
            -   Tip System Toggle added to Design tab,  modified to save profile data.
            -   On Stage Request Toggle added to On Stage header.
            -   Audience request flow () modified to respect  (skips tip modal) and  (shows requests off message, hides song list/random song button).
        -   **Login Page Enhancement**:  and  refactored.  now displays user's photo, welcome story, subscription info, and Support RequestWave section with donation options. Login form is positioned above story.
        -   **Audience Link Box**: Removed Start your 14-day trial banner text. Added View button next to Copy button.
        -   **Zelle Fields Fix**:  and  added to initial profile  and to  loading  data.  ensured to be called on Profile tab activation.
        -   **On Stage Buttons Fix**: Unified  function for request status updates, removing old conflicting implementations.
        -   **Song Edit Multi-Select**: Multi-select dropdowns for genres and moods integrated into the song edit modal. Uses existing  and  for dropdown population. Replaced old text inputs.

-   **/app/backend/.env**: Backend environment variables.
    -   **Changes Made**:  added.  updated to  (though runtime hotfix was also needed).
-   **/app/frontend/.env**: Frontend environment variables.
    -   **Changes Made**:  added.  was updated to production URL for deployment.
-   **/app/README.md**: Project documentation.
    -   **Changes Made**: Added section detailing  feature flag.
-   **/app/backend/.env.example**: Example backend environment variables.
    -   **Changes Made**: Created, includes .
-   **/app/frontend/.env.example**: Example frontend environment variables.
    -   **Changes Made**: Created, includes .
</code_architecture>

<pending_tasks>
-   Ensure the Help/Quick Start button appears consistently in the mobile navigation dropdown.
-   Address any issues related to the onboarding demo playlist.
</pending_tasks>

<current_work>
The AI engineer is currently addressing a bug related to the mobile dropdown. Specifically, the task is to ensure the Help (?) button in the main navigation appears correctly within the mobile navigation dropdown. The engineer has identified the Help button's location in  (around line 2894) and is now examining the mobile navigation section (around line 2904) to understand its structure and implement the necessary changes for mobile visibility. This is part of a series of bug fixes and enhancements, with several others already completed, including the On Stage error fix, audience link box refinements, and multi-select genre/mood implementation.
</current_work>

<optional_next_step>
Investigate and fix the mobile dropdown to ensure the Help button is visible.
</optional_next_step>
